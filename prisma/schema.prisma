datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  password  Password?
}

model Password {
  hash   String
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model FeatureProduct {
  id          String   @id @default(cuid())
  title       String
  description String
  features    String
  price       Float
  order       Int
  count       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  media       Media[]
}

model CategoryProduct {
  id          String   @id @default(cuid())
  title       String
  description String
  price       Float
  order       Int
  count       Int
  categoryId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  media       Media[]
}

model Category {
  id               String            @id @default(cuid())
  title            String
  order            Int
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  categoryProducts CategoryProduct[]
}

model Media {
  id                String           @id @default(cuid())
  url               String
  primary           Boolean
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  featureProductId  String?
  categoryProductId String?
  categoryProduct   CategoryProduct? @relation(fields: [categoryProductId], references: [id], onDelete: Cascade)
  featureProduct    FeatureProduct?  @relation(fields: [featureProductId], references: [id], onDelete: Cascade)
}
